//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="InterfaceMyPhotos")]
public interface InterfaceMyPhotos
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/insertFiles", ReplyAction="http://tempuri.org/InterfaceMyPhotos/insertFilesResponse")]
    int insertFiles(string fileName, string filePath, string fileType, System.DateTime creation, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/insertFiles", ReplyAction="http://tempuri.org/InterfaceMyPhotos/insertFilesResponse")]
    System.Threading.Tasks.Task<int> insertFilesAsync(string fileName, string filePath, string fileType, System.DateTime creation, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/modifyFiles", ReplyAction="http://tempuri.org/InterfaceMyPhotos/modifyFilesResponse")]
    void modifyFiles(string fileName, string filePath, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/modifyFiles", ReplyAction="http://tempuri.org/InterfaceMyPhotos/modifyFilesResponse")]
    System.Threading.Tasks.Task modifyFilesAsync(string fileName, string filePath, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/deleteFiles", ReplyAction="http://tempuri.org/InterfaceMyPhotos/deleteFilesResponse")]
    void deleteFiles(string fileName, string filePath);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/deleteFiles", ReplyAction="http://tempuri.org/InterfaceMyPhotos/deleteFilesResponse")]
    System.Threading.Tasks.Task deleteFilesAsync(string fileName, string filePath);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getPersons", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getPersonsResponse")]
    string[] getPersons();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getPersons", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getPersonsResponse")]
    System.Threading.Tasks.Task<string[]> getPersonsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getLocations", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getLocationsResponse")]
    string[] getLocations();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getLocations", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getLocationsResponse")]
    System.Threading.Tasks.Task<string[]> getLocationsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getEvents", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getEventsResponse")]
    string[] getEvents();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getEvents", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getEventsResponse")]
    System.Threading.Tasks.Task<string[]> getEventsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getPropertys", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getPropertysResponse")]
    string[] getPropertys();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getPropertys", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getPropertysResponse")]
    System.Threading.Tasks.Task<string[]> getPropertysAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getFilesPath", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getFilesPathResponse")]
    string[] getFilesPath();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getFilesPath", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getFilesPathResponse")]
    System.Threading.Tasks.Task<string[]> getFilesPathAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getFileDetails", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getFileDetailsResponse")]
    string[] getFileDetails(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/getFileDetails", ReplyAction="http://tempuri.org/InterfaceMyPhotos/getFileDetailsResponse")]
    System.Threading.Tasks.Task<string[]> getFileDetailsAsync(string path);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/searchFile", ReplyAction="http://tempuri.org/InterfaceMyPhotos/searchFileResponse")]
    string[] searchFile(string fileName, string filePath, string fileType, System.DateTime creation, bool searchDate, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceMyPhotos/searchFile", ReplyAction="http://tempuri.org/InterfaceMyPhotos/searchFileResponse")]
    System.Threading.Tasks.Task<string[]> searchFileAsync(string fileName, string filePath, string fileType, System.DateTime creation, bool searchDate, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface InterfaceMyPhotosChannel : InterfaceMyPhotos, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class InterfaceMyPhotosClient : System.ServiceModel.ClientBase<InterfaceMyPhotos>, InterfaceMyPhotos
{
    
    public InterfaceMyPhotosClient()
    {
    }
    
    public InterfaceMyPhotosClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public InterfaceMyPhotosClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public InterfaceMyPhotosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public InterfaceMyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public int insertFiles(string fileName, string filePath, string fileType, System.DateTime creation, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys)
    {
        return base.Channel.insertFiles(fileName, filePath, fileType, creation, personNames, locationNames, eventNames, propertys);
    }
    
    public System.Threading.Tasks.Task<int> insertFilesAsync(string fileName, string filePath, string fileType, System.DateTime creation, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys)
    {
        return base.Channel.insertFilesAsync(fileName, filePath, fileType, creation, personNames, locationNames, eventNames, propertys);
    }
    
    public void modifyFiles(string fileName, string filePath, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys)
    {
        base.Channel.modifyFiles(fileName, filePath, personNames, locationNames, eventNames, propertys);
    }
    
    public System.Threading.Tasks.Task modifyFilesAsync(string fileName, string filePath, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys)
    {
        return base.Channel.modifyFilesAsync(fileName, filePath, personNames, locationNames, eventNames, propertys);
    }
    
    public void deleteFiles(string fileName, string filePath)
    {
        base.Channel.deleteFiles(fileName, filePath);
    }
    
    public System.Threading.Tasks.Task deleteFilesAsync(string fileName, string filePath)
    {
        return base.Channel.deleteFilesAsync(fileName, filePath);
    }
    
    public string[] getPersons()
    {
        return base.Channel.getPersons();
    }
    
    public System.Threading.Tasks.Task<string[]> getPersonsAsync()
    {
        return base.Channel.getPersonsAsync();
    }
    
    public string[] getLocations()
    {
        return base.Channel.getLocations();
    }
    
    public System.Threading.Tasks.Task<string[]> getLocationsAsync()
    {
        return base.Channel.getLocationsAsync();
    }
    
    public string[] getEvents()
    {
        return base.Channel.getEvents();
    }
    
    public System.Threading.Tasks.Task<string[]> getEventsAsync()
    {
        return base.Channel.getEventsAsync();
    }
    
    public string[] getPropertys()
    {
        return base.Channel.getPropertys();
    }
    
    public System.Threading.Tasks.Task<string[]> getPropertysAsync()
    {
        return base.Channel.getPropertysAsync();
    }
    
    public string[] getFilesPath()
    {
        return base.Channel.getFilesPath();
    }
    
    public System.Threading.Tasks.Task<string[]> getFilesPathAsync()
    {
        return base.Channel.getFilesPathAsync();
    }
    
    public string[] getFileDetails(string path)
    {
        return base.Channel.getFileDetails(path);
    }
    
    public System.Threading.Tasks.Task<string[]> getFileDetailsAsync(string path)
    {
        return base.Channel.getFileDetailsAsync(path);
    }
    
    public string[] searchFile(string fileName, string filePath, string fileType, System.DateTime creation, bool searchDate, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys)
    {
        return base.Channel.searchFile(fileName, filePath, fileType, creation, searchDate, personNames, locationNames, eventNames, propertys);
    }
    
    public System.Threading.Tasks.Task<string[]> searchFileAsync(string fileName, string filePath, string fileType, System.DateTime creation, bool searchDate, string[] personNames, string[] locationNames, string[] eventNames, string[] propertys)
    {
        return base.Channel.searchFileAsync(fileName, filePath, fileType, creation, searchDate, personNames, locationNames, eventNames, propertys);
    }
}
